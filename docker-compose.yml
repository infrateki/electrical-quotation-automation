version: '3.8'

services:
  # PostgreSQL - Primary Database
  postgres:
    image: postgres:15-alpine
    container_name: proquote_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: proquote_user
      POSTGRES_PASSWORD: proquote_pass
      POSTGRES_DB: proquote_db
      POSTGRES_INITDB_ARGS: "-E UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U proquote_user -d proquote_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Neo4j - Graph Database for Electrical Components
  neo4j:
    image: neo4j:5-community
    container_name: proquote_neo4j
    restart: unless-stopped
    environment:
      NEO4J_AUTH: neo4j/neo4j_password
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_memory_pagecache_size: 512M
      NEO4J_dbms_memory_heap_max__size: 1G
      NEO4J_dbms_default__database: proquote
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - ./infrastructure/docker/neo4j/import:/import
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis - Caching and Session Management
  redis:
    image: redis:7-alpine
    container_name: proquote_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adminer - Database Management UI
  adminer:
    image: adminer:latest
    container_name: proquote_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres

  # Redis Commander - Redis Management UI
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: proquote_redis_commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis_password
    ports:
      - "8081:8081"
    depends_on:
      - redis

  # Development API Server (uncomment when ready)
  # api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: proquote_api
  #   restart: unless-stopped
  #   environment:
  #     DATABASE_URL: postgresql+asyncpg://proquote_user:proquote_pass@postgres:5432/proquote_db
  #     NEO4J_URI: bolt://neo4j:7687
  #     NEO4J_USER: neo4j
  #     NEO4J_PASSWORD: neo4j_password
  #     REDIS_URL: redis://:redis_password@redis:6379/0
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./:/app
  #   depends_on:
  #     - postgres
  #     - neo4j
  #     - redis
  #   command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: proquote_network
    driver: bridge
